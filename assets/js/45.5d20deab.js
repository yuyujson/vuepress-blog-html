(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{563:function(t,s,a){"use strict";a.r(s);var n=a(29),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("blockquote",[a("p",[t._v("学习过程中遇到的感觉比较有意思的"),a("code",[t._v("API")]),t._v("做一个整理")])]),t._v(" "),a("h2",{attrs:{id:"setnx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setnx"}},[t._v("#")]),t._v(" setNx")]),t._v(" "),a("blockquote",[a("p",[t._v("如果指定的Key不存在，则设定该Key持有指定字符串Value，此时其效果等价于SET命令。相反，如果该Key已经存在，该命令将不做任何操作并返回。")])]),t._v(" "),a("p",[t._v("这个命令常用语分布式锁, 用法如下")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setnx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expire")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lockKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("del")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("ol",[a("li",[t._v("设置锁的位置和需要执行的方法要在"),a("code",[t._v("try")]),t._v("内")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("finally")]),t._v("内部判断加锁成功后删除锁")]),t._v(" "),a("li",[t._v("为了防止一个方法超时,长时间占用锁, 我们一般会加一个过期时间")]),t._v(" "),a("li",[t._v("过期时间添加需谨慎, 假设方法执行了12s会出现如下情况\n"),a("ol",[a("li",[t._v("0s:第一个线程进来后加锁")]),t._v(" "),a("li",[t._v("10s:第一个线程的锁过期")]),t._v(" "),a("li",[t._v("10s:第二个线程获取到锁,并执行方法")]),t._v(" "),a("li",[t._v("12s:第一个线程执行完,进入"),a("code",[t._v("finally")]),t._v("删除第二个线程的锁")]),t._v(" "),a("li",[t._v("12s:第三个线程进入并获取锁")])])])]),t._v(" "),a("p",[t._v("解决4的情况除了正确预估时间外, 还可以使用将"),a("code",[t._v("value")]),t._v("的值设置为每一请求的独立编号,如商品id等, 在删除时先比较"),a("code",[t._v("value")]),t._v("是否相等再删除. 这样可以在少量锁超时时不会误删除其他线程的锁")]),t._v(" "),a("h2",{attrs:{id:"incr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#incr"}},[t._v("#")]),t._v(" incr")]),t._v(" "),a("blockquote",[a("p",[t._v("将指定Key的Value原子性的递增1。如果该Key不存在，其初始值为0，在incr之后其值为1。如果Value的值不能转换为整型值，如Hello，该操作将执行失败")]),t._v(" "),a("p",[t._v("并返回相应的错误信息。注意：该操作的取值范围是64位有符号整型。")])]),t._v(" "),a("p",[t._v("这个一般用于"),a("code",[t._v("id")]),t._v("递增的情况, 但是redis毕竟是一个缓存性质的数据库, 建议代码逻辑自增")]),t._v(" "),a("h2",{attrs:{id:"blpop-brpop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blpop-brpop"}},[t._v("#")]),t._v(" blpop/brpop")]),t._v(" "),a("blockquote",[a("p",[t._v("Blpop: 移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。")]),t._v(" "),a("p",[t._v("Brpop: 移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。")])]),t._v(" "),a("p",[t._v("一般当做一个发布订阅的消息列队使用")]),t._v(" "),a("ol",[a("li",[t._v("数据量小的情况下:"),a("code",[t._v("ArrayBlockingQueue")]),t._v("不香吗?")]),t._v(" "),a("li",[t._v("数据量大的情况下: "),a("code",[t._v("mq")]),t._v("不香吗?")]),t._v(" "),a("li",[t._v("数据量不尴不尬, 应用范围不算太大,又没钱: 真香!")])]),t._v(" "),a("h2",{attrs:{id:"hyperloglog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hyperloglog"}},[t._v("#")]),t._v(" HyperLogLog")]),t._v(" "),a("blockquote",[a("p",[t._v("Redis HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定 的、并且是很小的。")]),t._v(" "),a("p",[t._v("在 Redis 里面，每个 HyperLogLog 键只需要花费 12 KB 内存，就可以计算接近 2^64 个不同元素的基 数。这和计算基数时，元素越多耗费内存就越多的集合形成鲜明对比。")]),t._v(" "),a("p",[t._v("但是，因为 HyperLogLog 只会根据输入元素来计算基数，而不会储存输入元素本身，所以 HyperLogLog 不能像集合那样，返回输入的各个元素。")])]),t._v(" "),a("p",[t._v("一般用于计算页面访问量, 同一个页面无论访问多少次都计算一次")]),t._v(" "),a("p",[t._v("具体没有太搞懂, 如果需要实现上述功能也可以使用下面这个")]),t._v(" "),a("h2",{attrs:{id:"bitmaps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bitmaps"}},[t._v("#")]),t._v(" bitmaps")]),t._v(" "),a("blockquote",[a("p",[t._v("Redis提供的Bitmaps这个“数据结构”可以实现对位的操作。Bitmaps本身不是一种数据结构，实际上就是字符串，但是它可以对字符串的位进行操作")]),t._v(" "),a("p",[t._v("可以把Bitmaps想象成一个以位为单位数组，数组中的每个单元只能存0或者1，数组的下标在bitmaps中叫做偏移量。单个bitmaps的最大长度是512MB，即2^32个比特位")])]),t._v(" "),a("p",[t._v("位图, 一般用于统计每天的用户活跃数/签到/点赞等")]),t._v(" "),a("p",[t._v("在将id等设置进位图时可以考虑先进行减最小id,尽可能的把数组的长度缩小, 否则初始化时间会比较长,同时造成资源浪费")]),t._v(" "),a("h2",{attrs:{id:"pipeline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pipeline"}},[t._v("#")]),t._v(" Pipeline")]),t._v(" "),a("blockquote",[a("p",[t._v("大批量数据写入"),a("code",[t._v("redis")]),t._v(",同时,都不需要返回值, 可以使用"),a("code",[t._v("Pipeline")]),t._v("加速")])]),t._v(" "),a("p",[t._v("用于热点数据的初始化")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/johnf_nash/article/details/87894802",target:"_blank",rel:"noopener noreferrer"}},[t._v("分布式缓存Redis之Pipeline（管道）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/w1lgy/article/details/84455579",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis系列十：Pipeline详解"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"geo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geo"}},[t._v("#")]),t._v(" GEO")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("GEO")]),t._v("功能在Redis3.2版本提供，支持存储地理位置信息用来实现诸如附近位置、摇一摇这类依赖于地理位置信息的功能.geo的数据类型为zset.")])]),t._v(" "),a("p",[t._v("可以实现获取附近的人功能")]),t._v(" "),a("h2",{attrs:{id:"redisbloom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redisbloom"}},[t._v("#")]),t._v(" RedisBloom")]),t._v(" "),a("blockquote",[a("p",[t._v("这是一个"),a("code",[t._v("redis4.0")]),t._v("布隆过滤器的插件")])]),t._v(" "),a("p",[t._v("用途及使用请看这篇"),a("a",{attrs:{href:"https://www.chenguanting.top/2020/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("布隆过滤器"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("扩展"),a("a",{attrs:{href:"https://blog.csdn.net/weixin_34410662/article/details/91434798",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis 高级主题之布隆过滤器(BloomFilter)"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);