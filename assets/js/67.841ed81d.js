(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{585:function(s,a,t){"use strict";t.r(a);var n=t(29),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("项目中前端访问后端的数据流为 "),t("code",[s._v("前端发起http请求 => 后端应用层 => kong网关 => 后端服务层")]),s._v(" , 为了保证后端应用层到服务层之间的数据安全性, 我们增加了 "),t("code",[s._v("aksk")]),s._v(" 验签操作, 只有验签通过的请求才会进行处理, 但是之前的"),t("code",[s._v("aksk")]),s._v(" 是写在"),t("code",[s._v("后端服务层")]),s._v(" 代码里的, 如果有一些非法请求进行访问, 会造成一端无效的请求命中后端服务, 会对系统的性能造成一定的影响,  所以决定使用"),t("code",[s._v("kong")]),s._v(" 网关的插件功能, 在"),t("code",[s._v("kong")]),s._v(" 中进行验签操作")]),s._v(" "),t("h2",{attrs:{id:"kong插件介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kong插件介绍"}},[s._v("#")]),s._v(" kong插件介绍")]),s._v(" "),t("h3",{attrs:{id:"现有的数据访问流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#现有的数据访问流程"}},[s._v("#")]),s._v(" 现有的数据访问流程")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/yuyujson/cdn-images@latest/blog-images/20210607161026.png",alt:"image-20210607161026146"}})]),s._v(" "),t("h3",{attrs:{id:"使用kong插件后的流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用kong插件后的流程"}},[s._v("#")]),s._v(" 使用kong插件后的流程")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/yuyujson/cdn-images@latest/blog-images/20210607161101.png",alt:"image-20210607161101026"}})]),s._v(" "),t("h2",{attrs:{id:"本地搭建架构图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地搭建架构图"}},[s._v("#")]),s._v(" 本地搭建架构图")]),s._v(" "),t("blockquote",[t("p",[s._v("docker部署特别方便, 本次环境搭建除了"),t("code",[s._v("kong")]),s._v(" 网关其他的均使用docker方式搭建")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/yuyujson/cdn-images@latest/blog-images/20210607161301.png",alt:"image-20210607161301763"}})]),s._v(" "),t("h2",{attrs:{id:"定义网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义网络"}},[s._v("#")]),s._v(" 定义网络")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker network create kong-net\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"consul"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#consul"}},[s._v("#")]),s._v(" consul")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker run --name consul --network"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kong-net -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8500")]),s._v(":8500 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8600")]),s._v(":8600/udp -h node-dev consul\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("访问地址验证http://127.0.0.1:8500")]),s._v(" "),t("h2",{attrs:{id:"postgres-数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#postgres-数据库"}},[s._v("#")]),s._v(" postgres 数据库")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker run -d --name kong-database "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n               --network"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kong-net "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n               -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5432")]),s._v(":5432 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n               -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"POSTGRES_USER=kong"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n               -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"POSTGRES_DB=kong"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n               -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"POSTGRES_PASSWORD=kong"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n               postgres:9.6\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("这里注意postgres版本号为9.6，高版本不支持konga（konga部署2种方式，依赖数据库，另外一种不依赖数据库。依赖数据库的方式：postgres版本号为9.6可以与之兼容）")]),s._v(" "),t("h2",{attrs:{id:"安装kong"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装kong"}},[s._v("#")]),s._v(" 安装kong")]),s._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" kong\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[s._v("#")]),s._v(" 配置文件")]),s._v(" "),t("p",[s._v("下载 "),t("a",{attrs:{href:"https://raw.githubusercontent.com/Kong/kong/master/kong.conf.default",target:"_blank",rel:"noopener noreferrer"}},[s._v("kong.conf.default"),t("OutboundLink")],1),s._v(" 并将文件移动到 "),t("code",[s._v("/etc/kong/kong.conf")])]),s._v(" "),t("p",[s._v("注意：这个kong.conf配置文件的信息需要修改，其中包括配置postgres数据库的地址账号密码等信息")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("database = postgres             # Determines which of PostgreSQL or Cassandra\n                                 # this node will use as its datastore.\n                                 # Accepted values are `postgres`,\n                                 # `cassandra`, and `off`.\n\npg_host = 127.0.0.1             # pg数据库在docker中,所以填写本机地址\npg_port = 5432                  # pg数据库端口号\npg_timeout = 5000               # Defines the timeout (in ms), for connecting,\n                                 # reading and writing.\n\npg_user = kong                  # Postgres user.\npg_password = kong\npg_database = kong              # The database name to connect to.\n\ndns_resolver = 127.0.0.1:8600   # 配置consul\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h3",{attrs:{id:"初始化kong数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化kong数据库"}},[s._v("#")]),s._v(" 初始化kong数据库")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("kong migrations up -c /etc/kong/kong.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("kong start -c /etc/kong/kong.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("验证")])]),s._v(" "),t("p",[s._v("浏览器访问127.0.0.1:8001，返回Json数据，说明Kong网关已经启动成功。")]),s._v(" "),t("blockquote",[t("p",[s._v("如果访问不通则尝试使用"),t("code",[s._v("localhost:8001")]),s._v(" , 如果使用localhost可以访问, 则将配置文件中的"),t("code",[s._v("admin_listen")]),s._v("的值 从"),t("code",[s._v("localhost")]),s._v(" 修改 为 "),t("code",[s._v("127.0.0.1")]),s._v(" ,"),t("strong",[s._v("修改配置文件重新启动生效")])])]),s._v(" "),t("h2",{attrs:{id:"安装konga"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装konga"}},[s._v("#")]),s._v(" 安装konga")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('docker run -p 1337:1337  --name konga  -e "NODE_ENV=production"  pantsel/konga\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("浏览器访问 "),t("a",{attrs:{href:"http://127.0.0.1:1377",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://127.0.0.1:1337"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"konga添加kong链接注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#konga添加kong链接注意事项"}},[s._v("#")]),s._v(" konga添加kong链接注意事项")]),s._v(" "),t("p",[s._v("Konga 是部署在docker中的, 而kong部署在宿主机上, 两者之间网络是隔离的, docker容器访问宿主机需使用"),t("code",[s._v("docker.for.mac.host.internal")]),s._v(" 代替"),t("code",[s._v("localhost")])])])}),[],!1,null,null,null);a.default=e.exports}}]);